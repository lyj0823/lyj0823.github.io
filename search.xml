<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[语音识别入门]]></title>
    <url>%2F2019%2F07%2F27%2F%E8%AF%AD%E9%9F%B3%E8%AF%86%E5%88%AB%E7%9B%B8%E5%85%B3%2F</url>
    <content type="text"><![CDATA[基础概念，代码实现语音相关知识点 # MFCC [https://blog.csdn.net/zouxy09/article/details/9156785]() MFCCs（Mel Frequency Cepstral Coefficents）是一种在自动语音和说话人识别中广泛使用的特征。它是在1980年由Davis和Mermelstein搞出来的。从那时起。在语音识别领域，MFCCs在人工特征方面可谓是鹤立鸡群，一枝独秀，从未被超越啊 ##倒谱分析语音的频谱图，峰值表示语音的主要频率成分，把峰值称为共振峰，其携带了声音的辨识属性，用共振峰识别不同声音。因此要提出共振峰，并且同时提取出其转变过程，因此提取的是频谱的包络–一条连接这些共振峰点的平滑曲线 原始的频谱包含两部分：包络和频谱细节。这里使用对数频谱，单位db 如何得到频谱和细节 需要Play a Mathematical Trick,也就是对频谱做FFT，在频谱上做傅里叶变换相当于逆傅里叶变换IFFT 傅里叶变换离散余弦变换梅尔频率梅尔频率倒谱系数（MFCC）提取MFCC步骤如下：提取MFCC特征的过程：（具体的数学过程网上太多了，这里就不想贴了） 1）先对语音进行预加重、分帧和加窗； 2）对每一个短时分析窗，通过FFT得到对应的频谱； 3）将上面的频谱通过Mel滤波器组得到Mel频谱； 4）在Mel频谱上面进行倒谱分析（取对数，做逆变换，实际逆变换一般是通过DCT离散余弦变换来实现，取DCT后的第2个到第13个系数作为MFCC系数），获得Mel频率倒谱系数MFCC，这个MFCC就是这帧语音的特征； i-vectorCTC lossGMM-UBM模型说话人识别模型 ###声纹可以作为判别不同人的依据是每个人的声音由不同的声腔尺寸和发声器官被操纵的方式，这两个因素使得声音变得独一无二 GMM-UBM是为了解决说话人训练数据较少而提出的说话人识别模型 Deep Speech模型 Connectionist Temporal Classification CTC是一种改进的RNN模型 ##摘要许多实际的序列学习任务需要从含噪、无分割的输入数据中预测标签序列。在语音识别中，声音信号被转换为单词或子单词单元。 递归神经网络(Rnn)是一种功能强大的序列学习器，似乎很适合于这类任务。然而，由于它们需要预分割的训练数据和后处理才能将它们的输出转换为标签序列，因此到目前为止，它们的适用性受到了限制。本文提出训练RNN方法直接对未分割序列进行预测，因此同时解决两个问题。在TIMIT语音语料库中实验结果表明其相对于baselineHMM和混合HMM-RNN的优越性。 ##简介标注非分段序列数据是现实世界序列学习中普遍存在的问题。它在感知任务(例如手写识别、语音识别、手势识别)中尤为常见，在这些任务中，有噪声的实值输入流被离散实验室的字符串注释。 ELS，如字母或单词近来，图模型如因马尔科夫HMMS，条件随机场CRFs及其变形是序列标注问题的主要框架，但是需要大量特定的知识；RNN则不需要先验知识，中间状态提供有效的生成机制来对序列建模，同时对时空噪声鲁棒性。 但是，RNN目前不能直接应用于序列标注。问题是标准的神经网络目标函数是针对训练序列中的每个点分别定义的。也就是说RNN只能被训练为一系列独立的标签分类。这意味着训练数据必须经过预分割和后处理网络输出才能给出最后的序列标注。 目前，最有效的利用RNNs进行序列标注就是将其与HMMs结合。混合系统使用hmms对数据的长期顺序结构进行建模，并使用神经网络进行局部分类。HMM组件能够在训练过程中自动分割序列，并将网络分类转换为标签序列。然而由于HMMs本身的缺点，混合系统不能充分发挥RNNs对序列建模的能力。 本文提出一个新奇的方法使用进行序列标注，并且不需要预分割训练数据和后处理输出，在一个单一的网络结构中对序列的所有方面进行建模。其基本思想是将网络输出解释为以给定输入序列为条件的所有可能的标签序列上的概率分布。基于该分布，可以导出目标函数最大限度最大化正确标注的可能。由于目标函数可微分，网络可以使用经典的BP算法进行训练。接下来，我们将标记未分割序列任务记作时间分类，将我们使用RNNs达到这个目的纪委CTC。我们将输入序列的每个时间步骤或帧的独立标记称为帧分类。下面是时间分类的数学形式，定义本文使用的误差度量。第三部分描述允许RNN用作时态分类器的输出表示形式。第四部分是如何训练CTC网络，第五部分是比较CTC和混合模型，HMM系统在TIMIT语料库中性能。第六部分是讨论CTC和其他时间分类的区别，并且讨论进一步研究方向，第七部分是本文结论。 ##时间分类S训练样本集，学习映射h:X–&gt;Z,对未知序列分类，最小化误差度量。编辑距离：将p改为q所需的插入、替换和删除的最小数目 ##CTC本部分介绍输出表示，其允许RNN用于CTC。关键的一步是将网络输出转化为标签序列上的条件概率分布。这个网络可以对给定的输入序列选择最有可能的标注。 ###从网络输出到标注一个CTC网络具有softmax输出层，它比L中的标签多一个单元。多出的单元是背景或者无标签。]]></content>
      <categories>
        <category>语音识别</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Hexo参考资料]]></title>
    <url>%2F2019%2F07%2F26%2FHexo%20github%20%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[参考资料Hexo搭建博客——实现主页分页 ssh-key使用的是.ssh/id-rsa.pub文件中秘钥 最全Hexo博客搭建+主题优化+插件配置+常用操作+错误分析 hexo Hexo 博客美化配置 打造个性超赞博客Hexo+NexT+GithubPages的超深度优化 修改hexo博客next主题文章页面宽度]]></content>
      <categories>
        <category>hexo入门</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F07%2F26%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <categories>
        <category>hexo入门示例</category>
      </categories>
  </entry>
</search>
